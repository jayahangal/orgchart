<project name="ppltree" default="usage" basedir=".">

  <!-- =================================================================== -->
  <!-- Initialization target                                               -->
  <!-- =================================================================== -->
  <target name="init">
    <tstamp>
    	<format property="year" pattern="yyyy" locale="en"/>
    </tstamp>
  	
  	<property file="build.properties"/>
    <property name="Name" value="ppltree"/>
    <property name="name" value="ppltree"/>
    <property name="version" value="beta"/>

    <property name="build.compiler" value="modern"/>
    <property name="debug" value="on"/>
    <property name="optimize" value="on"/>
    <property name="deprecation" value="on"/>

    <!-- Define the source directories -->
    <property name="root.dir" value="./"/>
  	<property name="data.dir" value="${root.dir}/public-data"/>
    <property name="doc.dir" value="${root.dir}/doc"/>
    <property name="lib.dir" value="${root.dir}/lib"/>
    <property name="src.dir" value="${root.dir}/src"/>
    <property name="test.dir" value="${root.dir}/test"/>

  	<!-- Define path to required libraries -->
  	<property name="prefuse.lib" value="${root.dir}/lib/prefuse.jar"/>
  	<property name="jfreechart.lib" value="${root.dir}/lib/jfreechart-1.0.12.jar"/>
  	<property name="jcommon.lib" value="${root.dir}/lib/jcommon-1.0.15.jar"/>
  	
    <!-- Define the source build directories -->
    <property name="build.dir" value="${root.dir}/build"/>
    <property name="build.lib" value="${root.dir}/build/lib"/>
    <property name="build.ppltree.src" value="${root.dir}/build/src"/>
    <property name="build.ppltree.dest" value="${root.dir}/build/classes"/>
    
    <!-- Define the distribution directories -->
    <property name="dist.root" value="${root.dir}/dist"/>
    <property name="sourcedist.dir" value="${dist.root}/${name}-${version}/"/>
    <property name="compiledist.dir" value="${dist.root}/${name}-${version}"/>    
  </target>

  <!-- =================================================================== -->
  <!-- Help on usage                                                       -->
  <!-- =================================================================== -->
  <target name="usage">
    <echo message=""/>
    <echo message=""/>
    <echo message="ppltree build control"/>
    <echo message="-------------------------------------------------------------"/>
    <echo message=""/>
    <echo message=" available targets are:"/>
    <echo message=""/>
    <echo message="   all        --> builds all the jars in ./build"/>
    <echo message="   ppltree    --> builds the ppltree.jar file in ./build"/>
    <echo message="   deploy     --> builds a web deployable ppltree.jar file in ./build"/>
    <echo message="   compiledist--> creates the compiled distribution in ./dist"/>
    <echo message="   sourcedist --> creates the source distribution in ./dist"/>    
    <echo message="   clean      --> restores distribution to original state"/>
    <echo message="   usage      --> (default) displays build menu"/>
    <echo message=""/>
    <echo message=" See the comments inside the build.xml file for more details."/>
    <echo message="-------------------------------------------------------------"/>
    <echo message=""/>
    <echo message=""/>
  </target>

  <!-- =================================================================== -->
  <!-- Prepares the build directory                                        -->
  <!-- =================================================================== -->
  <target name="prepare" depends="init, checkdirs" unless="libs-present">
    <mkdir dir="${build.dir}"/>
    <mkdir dir="${build.lib}"/>
    <unjar src="${prefuse.lib}" dest="${build.lib}"/>
    <unjar src="${jfreechart.lib}" dest="${build.lib}"/>
    <unjar src="${jcommon.lib}" dest="${build.lib}"/>
  </target>

  <target name="checkdirs">
   <available file="${build.lib}/prefuse/" type="dir"
           property="libs.present"/> 
  </target>

  <!-- =================================================================== -->
  <!-- Prepares the ppltree source code                                    -->
  <!-- =================================================================== -->
  <target name="prepare-ppltree" depends="prepare">
    <mkdir dir="${build.ppltree.src}"/>
    <mkdir dir="${build.ppltree.dest}"/>
   
    <copy todir="${build.ppltree.src}">
      <fileset dir="${src.dir}"/>
    </copy>
         
  </target>

  <!-- =================================================================== -->
  <!-- Compiles the ppltree source code                                    -->
  <!-- =================================================================== -->
  <target name="compile-ppltree" depends="prepare-ppltree">
    <!-- copy resource files -->
    <copy todir="${build.ppltree.dest}">
      <fileset dir="${build.ppltree.src}" excludes="**/*.java"/>
    </copy>

    <javac srcdir="${build.ppltree.src}"
           destdir="${build.ppltree.dest}"
    	       classpath="${prefuse.lib}:${jfreechart.lib}:${jcommon.lib}"
           debug="${debug}"
           deprecation="${deprecation}"
           optimize="${optimize}"/>
  </target>

  <!-- =================================================================== -->
  <!-- Creates the ppltree.jar in ./build                                  -->
  <!-- =================================================================== -->
  <target name="ppltree" depends="compile-ppltree">
    <jar jarfile="${build.dir}/${name}.jar" basedir="${build.ppltree.dest}" includes="**">
	<fileset dir="${build.lib}"/>
	<fileset dir="${data.dir}"/>
      <manifest>
      <!-- Who is building this jar? -->
      <attribute name="Built-By" value="${user.name}"/>
      <!-- Information about the program itself -->
      <attribute name="Implementation-Vendor" value="Ppltree"/>
      <attribute name="Implementation-Version" value="beta"/>
      <attribute name="Main-Class" value="OrgViewer"/>
      </manifest>
    </jar>
  	<jar jarfile="${build.dir}/${name}.src.jar"
  		 basedir="${build.ppltree.src}"
  		 includes="**"/>
  </target>

  <!-- =================================================================== -->
  <!-- Build all jars in ./build                                           -->
  <!-- =================================================================== -->
  <target name="all" depends="ppltree"/>

  <target name="deploy" depends="ppltree">
	<signjar jar="${build.dir}/ppltree.jar" alias="demo"
	  keystore="${root.dir}/pplkeystore" storepass="changeit"
    	  keypass="changeit" preservelastmodified="true">
        </signjar>	
  </target>

  <!-- =================================================================== -->
  <!-- Replace all sequences of 4 spaces in .java files with a tab         -->
  <!-- =================================================================== -->
  <target name="addTabsWithLength4" depends="init">
    <fixcrlf 
         srcdir="${root.dir}"
         tab="add"
         tablength="4"
         includes="**/*.java"/>
  </target>

  <!-- =================================================================== -->
  <!-- Replace all tabs in .java files with a sequence of 4 spaces         -->
  <!-- =================================================================== -->
  <target name="removeTabsWithLength4" depends="init">
    <fixcrlf 
         srcdir="${root.dir}"
         tab="remove"
         tablength="4"
         includes="**/*.java"/>
  </target>

  <!-- =================================================================== -->
  <!-- Build source distribution in ./dist                                 -->
  <!-- =================================================================== -->
  <target name="sourcedist" depends="clean">
    <mkdir dir="${dist.root}"/>
    <mkdir dir="${sourcedist.dir}"/>

    <copy todir="${sourcedist.dir}">
      <fileset dir="${root.dir}" excludes="**/.*" />
    </copy>
  	<copy todir="${sourcedist.dir}">
  		<fileset dir="${root.dir}" casesensitive="yes">
  		  <include name=".project"/>
  		  <include name=".classpath"/>
  		</fileset>
  	</copy>

    <!-- Now delete what we dont want, probably a better way to do this -->
    <delete dir="${sourcedist.dir}/dist"/>
  	<delete dir="${sourcedist.dir}/classes"/>
  	<delete dir="${sourcedist.dir}/build"/>
  	<delete dir="${sourcedist.dir}/.settings"/>

    <fixcrlf srcdir="${sourcedist.dir}"
    	eol="lf" eof="remove"
    	tablength="4" tab="remove"
        includes="**/*.sh"
    />
    <zip zipfile="${dist.root}/${name}-${version}-${DSTAMP}.zip"
         basedir="${dist.root}"
         whenempty="create"
    />
  </target>
	

  <!-- =================================================================== -->
  <!-- Build compiled distribution in ./dist                               -->
  <!-- =================================================================== -->
  <target name="compiledist" depends="clean, all">
    <mkdir dir="${dist.root}"/>
    <mkdir dir="${compiledist.dir}"/>

    <copy todir="${compiledist.dir}">
      <fileset dir="${root.dir}"/>
    </copy>

    <!-- Now delete what we dont want, probably a better way to do this -->
    <delete dir="${compiledist.dir}/dist"/>
  	<delete dir="${sourcedist.dir}/classes"/>
    <delete dir="${compiledist.dir}/build/ppltree"/>
  	<delete dir="${compiledist.dir}/build/lib"/>

    <fixcrlf srcdir="${compiledist.dir}"
       eol="lf" eof="remove"
       includes="**/*.sh"
    />

    <zip zipfile="${dist.root}/${name}-${version}-${DSTAMP}-bin.zip"
         basedir="${dist.root}/${name}-${version}"
         whenempty="create"
    />

  </target>

  <!-- =================================================================== -->
  <!-- Clean restores the distribution to original state                   -->
  <!-- =================================================================== -->
  <target name="clean" depends="init">
    <delete dir="${build.dir}"/>
    <delete dir="${dist.root}"/>
  </target>

  <!-- =================================================================== -->
  <!-- Fix tabs and line endings on java source files                      -->
  <!-- =================================================================== -->
  <target name="fixtabs" depends="init">
  	<fixcrlf srcdir="${src.dir}" eol="lf" eof="remove"
  		tablength="4" tab="remove" includes="**/*.java"	/>
  </target>
	
</project>

<!-- End of file -->
